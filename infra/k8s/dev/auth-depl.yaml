apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-depl
  labels:
    app: auth
    app.kubernetes.io/instance: auth-api-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
        app.kubernetes.io/instance: auth-api-service
    spec:
      containers:
        - name: auth
          image: anujgogroup/auth
          ports:
            - containerPort: 3000
          env:
            - name: AT_SECRET
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: AT_SECRET
            - name: RT_SECRET
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: RT_SECRET
            - name: DATABASE_URL
              value: "postgresql://postgres:postgres@auth-postgres-srv:5432/auth"
            - name: NODE_ENV
              value: "development"
            - name: KAFKA_BROKER
              value: "kafka-0.kafka-srv.default.svc.cluster.local:9092"
            - name: KAFKA_GROUP_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/instance']
            - name: KAFKA_CLIENT_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          resources:
            limits:
              memory: "1024Mi"
              cpu: "1000m"
            requests:
              memory: "512Mi"
              cpu: "500m"
          volumeMounts: # Optional volume mount for temporary logs
            - name: auth-logs
              mountPath: /app/logs
          securityContext: # Correctly placed container-level security context
            allowPrivilegeEscalation: true
            readOnlyRootFilesystem: false
      volumes: # Ephemeral volume for logs
        - name: auth-logs
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: auth-srv
spec:
  selector:
    app: auth
  ports:
    - name: http
      protocol: TCP
      port: 3000
      targetPort: 3000
